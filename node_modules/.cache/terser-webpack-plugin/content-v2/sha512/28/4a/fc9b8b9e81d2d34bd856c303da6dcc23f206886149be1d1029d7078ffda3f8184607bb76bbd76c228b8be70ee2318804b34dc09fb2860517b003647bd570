{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{291:function(a,t,v){\"use strict\";v.r(t);var i=v(10),r=Object(i.a)({},(function(){var a=this,t=a._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"v8引擎\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v8引擎\"}},[a._v(\"#\")]),a._v(\" v8引擎\")]),a._v(\" \"),t(\"p\",[a._v(\"在过去几年，JavaScript在很多领域得到了广泛的应用，然而限于JavaScript语言本身的不足，执行效率不高。Google也推出了一些JavaScript网络应用，如Gmail、Google Maps及Google Docs office等。这些应用的性能不仅受到服务器、网络、渲染引擎以及其他诸多因素的影响，同时也受到JavaScript本身执行速度的影响。然而既有的JavaScript引擎无法满足新的需求，而性能不佳一直是网络应用开发者最关心的。Google就开始了V8引擎的研究，将一系列新技术引入JavaScript引擎中，大大提高了JavaScript的执行效率。相信随着V8引擎的不断发展，JavaScript也会有更广泛的应用场景，前端工程师也会有更好的未来！\\n那么结合上面对于V8引擎的介绍，我们在编程中应注意：\")]),a._v(\" \"),t(\"ul\",[t(\"li\",[a._v(\"类型。对于函数，JavaScript是一种动态类型语言，JavaScriptCore和V8都使用隐藏类和内嵌缓存来提高性能，为了保证缓存命中率，一个函数应该使用较少的数据类型；对于数组，应尽量存放相同类型的数据，这样就可以通过偏移位置来访问。\")]),a._v(\" \"),t(\"li\",[a._v(\"数据表示。简单类型数据（如整型）直接保存在句柄中，可以减少寻址时间和内存占用，如果可以使用整数表示的，尽量不要用浮点类型。\")]),a._v(\" \"),t(\"li\",[a._v(\"内存。虽然JavaScript语言会自己进行垃圾回收，但我们也应尽量做到及时回收不用的内存，对不再使用的对象设置为null或使用delete方法来删除(使用delete方法删除会触发隐藏类新建，需要更多的额外操作)。\")]),a._v(\" \"),t(\"li\",[a._v(\"优化回滚。在执行多次之后，不要出现修改对象类型的语句，尽量不要触发优化回滚，否则会大幅度降低代码的性能。\")]),a._v(\" \"),t(\"li\",[a._v(\"新机制。使用JavaScript引擎或者渲染引擎提供的新机制和新接口提高性能。\")])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}