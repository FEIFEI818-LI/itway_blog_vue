(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{314:function(t,a,s){"use strict";s.r(a);var e=s(10),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"视口-viewport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视口-viewport"}},[t._v("#")]),t._v(" 视口 viewport")]),t._v(" "),a("p",[t._v("在 PC 端，视口指的是浏览器的可视区域，其宽度和浏览器窗口的度保持一致。在 CSS 标准文档中，视口也被称为初始包含块，它是所有 CSS 百分比宽度推算的根源，给 CSS 布局限制了一个最大宽度。")]),t._v(" "),a("p",[t._v("移动端浏览器通常宽度是 240px~640px，而大多数为 PC 端设计的网站宽度至少为 800px，如果仍以浏览器窗口作为视口的话，网站内容在手机上看起来会非常窄。因此，移动端引入三个概念，使得移动端中的视口与浏览器宽度不再相关联。")]),t._v(" "),a("ul",[a("li",[t._v("布局视口 Layout Viewport")]),t._v(" "),a("li",[t._v("视觉视口 Visual Viewport")]),t._v(" "),a("li",[t._v("理想视口 Ideal Viewpor")])]),t._v(" "),a("h3",{attrs:{id:"布局视口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局视口"}},[t._v("#")]),t._v(" 布局视口")]),t._v(" "),a("p",[t._v("一般移动设备的浏览器都默认设置了一个 "),a("code",[t._v("<viewport>")]),t._v(" 元标签，定义一个虚拟的布局视口（Layout Viewport），用于解决早期的页面在手机上显示的问题。iOS 和 Android 基本都将这个视口分辨率设置为 "),a("code",[t._v("980px")]),t._v("，所以 PC 上的网页基本能在手机上呈现，只不过元素看上去很小，一般默认可以手动缩放网页。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tsejx.github.io/css-guidebook/static/layout-viewport.a6b0fadd.jpg",alt:"布局视口"}})]),t._v(" "),a("p",[t._v("布局视口的宽度 / 高度可以通过以下获取。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" layoutViewport "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" clientHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以看到，默认的布局视口宽度为 980px。如果要显式设置布局视口，可以使用 HTML 中的 ")]),a("meta"),t._v(" 标签："),a("p"),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=400"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("布局视口使视口与移动端浏览器屏幕宽度完全独立开。CSS 布局将会根据它来进行计算，并被它约束。")]),t._v(" "),a("p",[t._v("我们可以使用视口标签（Viewport ")]),a("meta"),t._v(" 标签）来显式地设置布局视口。"),a("p"),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width,initial-scale=0,maximum-scale=1,user-scalable=no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("下面是每个属性的详细说明：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性名")]),t._v(" "),a("th",[t._v("取值")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("width")]),t._v(" "),a("td",[t._v("正整数或 device-width")]),t._v(" "),a("td",[t._v("定义视口的宽度，单位为像素")])]),t._v(" "),a("tr",[a("td",[t._v("height")]),t._v(" "),a("td",[t._v("正整数或 device-height")]),t._v(" "),a("td",[t._v("定义视口的高度，单位为像素，一般不用")])]),t._v(" "),a("tr",[a("td",[t._v("initial-scale")]),t._v(" "),a("td",[t._v("[0.0-10.0]")]),t._v(" "),a("td",[t._v("定义初始缩放值")])]),t._v(" "),a("tr",[a("td",[t._v("minimum-scale")]),t._v(" "),a("td",[t._v("[0.0-10.0]")]),t._v(" "),a("td",[t._v("定义放大最大比例，它必须小于或等于 maximum-scale 设置")])]),t._v(" "),a("tr",[a("td",[t._v("maximum-scale")]),t._v(" "),a("td",[t._v("[0.0-10.0]")]),t._v(" "),a("td",[t._v("定义缩小最小比例，它必须大于或等于 minimum-scale 设置")])]),t._v(" "),a("tr",[a("td",[t._v("user-scalable")]),t._v(" "),a("td",[t._v("yes / no / 0")]),t._v(" "),a("td",[t._v("定义是否允许用户缩放页面，默认 yes")])])])]),t._v(" "),a("p",[t._v("有几点值得注意：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<viewport>")]),t._v(" 标签只对移动端浏览器有效，对 PC 端浏览器无效")]),t._v(" "),a("li",[t._v("当缩放比例为 100% 时，"),a("code",[t._v("DIP 的宽度 = CSS 像素宽度 = 理想视口的宽度 = 布局视口的宽度")])]),t._v(" "),a("li",[t._v("单独设置 "),a("code",[t._v("initial-scale")]),t._v(" 或 "),a("code",[t._v("width")]),t._v(" 都会有兼容性问题，所以设置布局视口为理想视口的最佳方法是同时设置这两个属性")]),t._v(" "),a("li",[t._v("即使设置了 "),a("code",[t._v("user-scalable = no")]),t._v("，在 Android Chrome 浏览器中也可以强制启用手动缩放")])]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("布局视口的宽度 = device-width")]),t._v("（设备宽度，也就是："),a("code",[t._v("物理像素/dpr")]),t._v("）时，此时页面 100% 的宽度正好能在视觉视口中完全显示，不需要缩放查看页面了，而且在不同尺寸下都能基本表现一致，此时的布局视口的状态我们就称为 理想视口（Ideal Viewport）。")]),t._v(" "),a("h3",{attrs:{id:"视觉视口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视觉视口"}},[t._v("#")]),t._v(" 视觉视口")]),t._v(" "),a("p",[t._v("视觉视口是用户当前看到的区域，用户可以通过缩放操作视觉视口，同时不会影响布局视口。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tsejx.github.io/css-guidebook/static/vision-viewport.8f33ec57.jpg",alt:"视觉视口"}})]),t._v(" "),a("p",[t._v("视觉视口和缩放比例的关系为："),a("code",[t._v("当前缩放值 = 理想视口宽度 / 视觉视口宽度")])]),t._v(" "),a("p",[t._v("所以，当用户放大时，视觉视口将会变小，CSS 像素将跨越更多的物理像素。")]),t._v(" "),a("h3",{attrs:{id:"理想视口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理想视口"}},[t._v("#")]),t._v(" 理想视口")]),t._v(" "),a("p",[t._v("理想视口\n布局视口的默认宽度并不是一个理想的宽度，于是 Apple 和其他浏览器厂商引入了理想视口的概念，它对设备而言是最理想的布局视口尺寸。显示在理想视口中的网站具有最理想的宽度，用户无需进行缩放。")]),t._v(" "),a("p",[t._v("理想视口的值其实就是屏幕分辨率的值，它对应的像素叫做设备逻辑像素（Device Independent Pixel，DIP）。DIP 和设备的物理像素无关，一个 DIP 在任意像素密度的设备屏幕上都占据相同的空间。如果用户没有进行缩放，那么一个 CSS 像素就等于一个 DIP。")]),t._v(" "),a("p",[t._v("理想视口的宽度一般可以通过以下公式计算： 理想视口的宽度 = 设备像素 / dpr")]),t._v(" "),a("p",[t._v("也就是当 布局视口的宽度 等于 设备独立像素的宽度 时就是理想视口，也可以说"),a("code",[t._v("布局视口")]),t._v("等于"),a("code",[t._v("视觉视口")]),t._v("时是理想视口。")]),t._v(" "),a("p",[t._v("用下面的方法可以使布局视口与理想视口的宽度一致：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这行代码告诉浏览器,布局视口的宽度应该与理想视口的宽度一致 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("实际上，这就是响应式布局的基础。")]),t._v(" "),a("h2",{attrs:{id:"移动端适配方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移动端适配方案"}},[t._v("#")]),t._v(" 移动端适配方案")]),t._v(" "),a("h3",{attrs:{id:"方案一-百分比设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案一-百分比设置"}},[t._v("#")]),t._v(" 方案一：百分比设置")]),t._v(" "),a("ul",[a("li",[t._v("不同属性的百分比值，相对的可能是不同参照物，所以百分比往往很难统一；")]),t._v(" "),a("li",[t._v("所以百分比在移动端适配中使用是非常少的。")])]),t._v(" "),a("h3",{attrs:{id:"方案二-rem-单位-动态-html-的-font-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案二-rem-单位-动态-html-的-font-size"}},[t._v("#")]),t._v(" 方案二：rem 单位+动态 html 的 font-size")]),t._v(" "),a("h3",{attrs:{id:"方案三-vw-单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案三-vw-单位"}},[t._v("#")]),t._v(" 方案三：vw 单位")]),t._v(" "),a("h3",{attrs:{id:"方案四-flex-弹性布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案四-flex-弹性布局"}},[t._v("#")]),t._v(" 方案四：flex 弹性布局")])])}),[],!1,null,null,null);a.default=v.exports}}]);